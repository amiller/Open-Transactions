This document discribes how to compile and setup Open Transactions on Windows using Visual Studio.


------------  Basic Infranstructure: ------------

Windows 7
Visual Studio C++ 2010 Express
Microsoft Windows SDK for Windows 7 and .NET Framework 4 (full install)

After you have installed Windows SDK7.1 you need to do a few simple changes to the registry to make it the default.
load up regeit (as an adminstrator) and change:

HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSBuild\ToolsVersions\4.0\FrameworkSDKRoot  	(v7.0A > v7.1)
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSBuild\ToolsVersions\4.0\SDK35ToolsPath    	(v7.0A > v7.1)
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSBuild\ToolsVersions\4.0\SDK40ToolsPath    	(v7.0A > v7.1)

HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Windows\CurrentInstallFolder	(v7.0A > v7.1)
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Windows\CurrentVersion		(7.0.30319 > 7.1.7600.0.30514)


There are two Solution Files:

1. Containing the 2nd party library's

library\library.sln

2. Containing the OT Projects:

project\open-transactions.sln



------------  Install the following dependancies to their default locations: ------------  

Win32 OpenSSL v1.0.0g (or latest version)
http://www.slproweb.com/products/Win32OpenSSL.html


Java SE Development Kit 6 (latest 6.xx version)
http://www.oracle.com/technetwork/java/javase/downloads/jdk-6u30-download-1377139.html



------------  Setup Boost: ------------

Follow guide here with latest boost:
Download and place boost into the \boost_1_48_0 folder.

Load up the Windows SDK 7.1 Command Prompt.

navigate to the \boost_1_48_0 folder and run:

bootstrap.bat
b2 --clean-all

(please note the following operations will take HOURS to complete...)

b2 -d0 --toolset=msvc-10.0 --without-mpi --without-python --build-type=complete architecture=x86 address-model=32 stage
mkdir stage\lib\Win32
move stage\lib\*.dll stage\lib\Win32
move stage\lib\*.lib stage\lib\Win32

(for 64bt only)
b2 -d0 --toolset=msvc-10.0 --without-mpi --without-python --build-type=complete architecture=x86 address-model=64 stage
mkdir stage\lib\x64
move stage\lib\*.dll stage\lib\x64
move stage\lib\*.lib stage\lib\x64


The project has been setup to expect that boost 1.48.0 is in the root folder of your system drive.



------------  Download Google Proticol Buffers protobuf-2.4.1.zip: ------------
https://code.google.com/p/protobuf/downloads/list


I have updated solution and project files in the Open-Transactions\library\3rdparty folder... replace the stock ones with these.

extract:

run extract_includes.bat

copy the contence of the built dir to Open-Transactions\include

compile the libprotobuf.vcproj project

copy the release and debug libprotobuf.lib into Open-Transactions\library\Release and Open-Transactions\library\Debug respectably



------------  Download ZMQ Stable release 2.1  ------------
http://www.zeromq.org/intro:get-the-software


I have updated solution and project files in the Open-Transactions\library\3rdparty folder... replace the stock ones with these.

get the Windows sources archive;
open up the \builds\msvc\msvc.sln project and compile libzmq (and again for debug)

complie and copy the assioated *.lib files into the Open-Transactions\library\  also copy the assioated *.dll files into project build folder assioated with each release.



------------  Download ChaiScript from git  ------------

in you lib dir go:

git clone git://github.com/ChaiScript/ChaiScript.git

get the solution and project files in the Open-Transactions\library\3rdparty folder... and place in the root of the ChaiScript.

copy the contence of the include dir to Open-Transactions\include

compile

copy the assioated *.lib and *.dll files to the Open-Transactions\library folder.




------------  Compile the library solution  ------------

open library\library.sln  and compile the project once for Debug and again for Release




------------  Compile the main project solution ------------

open project\open-transactions.sln and compile for release or debug... the output will be in the project\Release or project\Debug directory.


Hope it all works.... any issues!!! Come to #opentransactions and chat to da2ce7;  he will (hopefully) be able to help you with any of your compileing needs...



Please note.... while otserver will compile, it will not (atm) be successfull in running... we are debuging it now.
